diff --git a/runtime/process.go b/runtime/process.go
index cfcb659..277deb7 100644
--- a/runtime/process.go
+++ b/runtime/process.go
@@ -9,6 +9,7 @@ import (
 	"os/exec"
 	"path/filepath"
 	"strconv"
+	"sync"
 	"syscall"
 
 	"github.com/docker/containerd/specs"
@@ -46,7 +47,7 @@ type Process interface {
 	// State returns if the process is running or not
 	State() State
 	// Wait reaps the shim process if avaliable
-	Wait()
+	Wait() bool
 }
 
 type processConfig struct {
@@ -148,6 +149,8 @@ type process struct {
 	spec        specs.ProcessSpec
 	stdio       Stdio
 	cmd         *exec.Cmd
+	cmdSuccess  bool
+	cmdWaitLock sync.Mutex
 }
 
 func (p *process) ID() string {
@@ -229,10 +232,17 @@ func (p *process) getPidFromFile() (int, error) {
 }
 
 // Wait will reap the shim process
-func (p *process) Wait() {
+func (p *process) Wait() bool {
+	p.cmdWaitLock.Lock()
+	defer p.cmdWaitLock.Unlock()
 	if p.cmd != nil {
-		p.cmd.Wait()
+		err := p.cmd.Wait()
+		if err == nil {
+			p.cmdSuccess = true
+		}
+		p.cmd = nil
 	}
+	return p.cmdSuccess
 }
 
 func getExitPipe(path string) (*os.File, error) {
@@ -262,7 +272,7 @@ func (p *process) Start() error {
 	if p.ID() == InitProcessID {
 		var (
 			errC     = make(chan error, 1)
-			shimExit = make(chan struct{}, 1)
+			shimExit = make(chan bool, 1)
 			args     = append(p.container.runtimeArgs, "start", p.container.id)
 			cmd      = exec.Command(p.container.runtime, args...)
 		)
@@ -274,18 +284,23 @@ func (p *process) Start() error {
 			errC <- nil
 		}()
 		go func() {
-			p.Wait()
-			close(shimExit)
+			shimExit <- p.Wait()
 		}()
 		select {
 		case err := <-errC:
 			if err != nil {
 				return err
 			}
-		case <-shimExit:
-			cmd.Process.Kill()
-			cmd.Wait()
-			return ErrShimExited
+		case success := <-shimExit:
+			if !success {
+				cmd.Process.Kill()
+				cmd.Wait()
+				return ErrShimExited
+			}
+			err := <-errC
+			if err != nil {
+				return err
+			}
 		}
 	}
 	return nil
diff --git a/supervisor/sort_test.go b/supervisor/sort_test.go
index 3a419db..fb9681f 100644
--- a/supervisor/sort_test.go
+++ b/supervisor/sort_test.go
@@ -1,10 +1,10 @@
 package supervisor
 
 import (
+	"flag"
 	"os"
 	"sort"
 	"testing"
-	"flag"
 
 	"github.com/docker/containerd/runtime"
 	"github.com/docker/containerd/specs"
@@ -70,8 +70,8 @@ func (p *testProcess) State() runtime.State {
 	return runtime.Running
 }
 
-func (p *testProcess) Wait() {
-
+func (p *testProcess) Wait() bool {
+	return true
 }
 
 func TestSortProcesses(t *testing.T) {
